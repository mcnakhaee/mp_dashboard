name: Deploy to Heroku with Docker

on:
  schedule:
    - cron: "0 0 * * *"  # This will run the workflow every day at midnight UTC

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch the entire history to avoid shallow clone issues

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Commit and push the generated data (if changes exist)
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        # Add all changes and commit if necessary
        git add .
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "Update data from get_data.py"
          
          # Fetch latest changes to avoid overwriting anything
          git fetch origin main
          
          # Merge latest changes without losing local modifications
          git merge origin/main --strategy-option=theirs  # Keep remote changes on conflict
          
          # Push the changes
          git push origin main
        else
          echo "No changes to commit"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Docker image to Heroku
      run: |
        echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com
        docker build -t registry.heroku.com/mp-dashboard/web .
        docker push registry.heroku.com/mp-dashboard/web
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

    - name: Release Docker image on Heroku
      run: |
        heroku container:release web -a mp-dashboard
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
