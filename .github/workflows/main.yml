name: Deploy to Heroku with Docker

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"  # This will run the workflow every day at midnight UTC
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install dependencies to run get_data.py
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run get_data.py script
      run: python get_data.py

    - name: Commit and push the generated data (if changes exist)
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "Update data from get_data.py"
          git push origin main
        else
          echo "No changes to commit"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Docker image to Heroku
      run: |
        echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com
        docker build -t registry.heroku.com/mp-dashboard/web .
        docker push registry.heroku.com/mp-dashboard/web
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

    - name: Release Docker image on Heroku
      run: |
        heroku container:release web -a mp-dashboard
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
